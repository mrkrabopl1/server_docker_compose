services:
  front:
    image: front-prod-i
    build:
      context: ./front
      dockerfile: Dockerfile.prod
    container_name: front-prod-c 
    # volumes:
    #   - nginx_images_volume:/usr/share/nginx/html/images
    ports:
     - "80:80"  
    environment:
     - ID="here we need to enter backend server"
    depends_on:
      - goapp1
  goapp1:
    container_name: goapp1
    image: goapp1:1.0.0
    build:
      context: ./backend
      dockerfile: go.dockerfile
    environment:
      DATABASE_URL: 'postgres://postgres:s8121996@postgres_db:5432/troyki?sslmode=disable'
    ports:
      - '8100:8100'
    depends_on:
      - postgres_db
    networks:
      - postgres_bridge
  postgres_db:
    container_name: postgres_db
    image: postgres:16.1-alpine3.18
    command:
      - "postgres"
      - "-c"
      - "max_connections=50"
      - "-c"
      - "shared_buffers=1GB"
      - "-c"
      - "effective_cache_size=4GB"
      - "-c"
      - "work_mem=16MB"
      - "-c"
      - "maintenance_work_mem=512MB"
      - "-c"
      - "random_page_cost=1.1"
      - "-c"
      - "temp_file_limit=10GB"
      - "-c"
      - "log_min_duration_statement=200ms"
      - "-c"
      - "idle_in_transaction_session_timeout=10s"
      - "-c"
      - "lock_timeout=1s"
      - "-c"
      - "statement_timeout=60s"
      - "-c"
      - "shared_preload_libraries=pg_stat_statements"
      - "-c"
      - "pg_stat_statements.max=10000"
      - "-c"
      - "pg_stat_statements.track=all"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "s8121996"
      POSTGRES_DB: troyki
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - ./backup/troyki.sql:/docker-entrypoint-initdb.d/troyki.sql
      - troyki-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d troyki"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G
    networks:
      - postgres_bridge
  pgadmin:
    #container_name: pgadmin_container
    image: dpage/pgadmin4:7.2
    environment:
      PGADMIN_DEFAULT_EMAIL: "mr.krabopl12@gmail.com"
      PGADMIN_DEFAULT_PASSWORD: "s8121996"
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    ports:
      - "5050:80"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
    networks:
      - postgres_bridge

# postgres_exporter:
#     container_name: exporter_container
#     image: prometheuscommunity/postgres-exporter:v0.10.1
#     environment:
#       DATA_SOURCE_URI: "postgres:5432/troyki?sslmode=disable"
#       DATA_SOURCE_USER: "postgres"
#       DATA_SOURCE_PASS: "s8121996"
#       PG_EXPORTER_EXTEND_QUERY_PATH: "/etc/postgres_exporter/queries.yaml"
#     volumes:
#       - ./queries.yaml:/etc/postgres_exporter/queries.yaml:ro
#     ports:
#       - "9187:9187"
#     restart: unless-stopped
#     deploy:
#       resources:
#         limits:
#           cpus: '0.2'
#           memory: 500M
#     networks:
#       - postgres

volumes:
  troyki-data:
  pgadmin-data:

networks:
  postgres_bridge:
    driver: bridge
   

